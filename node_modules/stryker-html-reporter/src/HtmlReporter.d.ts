import { Logger } from 'stryker-api/logging';
import { Reporter, MutantResult, SourceFile, ScoreResult } from 'stryker-api/report';
import { StrykerOptions } from 'stryker-api/core';
export declare const RESOURCES_DIR_NAME = "strykerResources";
export default class HtmlReporter implements Reporter {
    private readonly options;
    private readonly log;
    private _baseDir;
    private mainPromise;
    private mutantResults;
    private files;
    private scoreResult;
    constructor(options: StrykerOptions, log: Logger);
    static readonly inject: ["options", "logger"];
    onAllSourceFilesRead(files: SourceFile[]): void;
    onAllMutantsTested(results: MutantResult[]): void;
    onScoreCalculated(score: ScoreResult): void;
    wrapUp(): Promise<void>;
    private generateReport;
    private writeCommonResources;
    private writeReportDirectory;
    private writeChildren;
    private writeReportFile;
    private findFile;
    private findMutants;
    private readonly resourcesDir;
    private readonly baseDir;
    private cleanBaseFolder;
}
//# sourceMappingURL=HtmlReporter.d.ts.map