"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var noopLogger = {
    isTraceEnabled: function () { return false; },
    isDebugEnabled: function () { return false; },
    isInfoEnabled: function () { return false; },
    isWarnEnabled: function () { return false; },
    isErrorEnabled: function () { return false; },
    isFatalEnabled: function () { return false; },
    trace: function () { },
    debug: function () { },
    info: function () { },
    warn: function () { },
    error: function () { },
    fatal: function () { }
};
var logImplementation = function () { return noopLogger; };
var LoggerFactory = /** @class */ (function () {
    function LoggerFactory() {
    }
    LoggerFactory.setLogImplementation = function (implementation) {
        logImplementation = implementation;
    };
    LoggerFactory.getLogger = function (categoryName) {
        process.emitWarning("DEPRECATED call to `getLogger('" + categoryName + "')` is deprecated. Stryker plugins should use dependency injection to let loggers be injected");
        return logImplementation(categoryName);
    };
    return LoggerFactory;
}());
exports.default = LoggerFactory;
//# sourceMappingURL=LoggerFactory.js.map